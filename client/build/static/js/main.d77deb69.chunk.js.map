{"version":3,"sources":["apiCalls.js","App.js","reportWebVitals.js","index.js"],"names":["getPosts","callback","fetch","credentials","then","res","json","map","post","idx","className","time","user","text","App","useState","enteringCredentials","setEnteringCredentials","makingPost","setMakingPost","loggedUser","setLoggedUser","usernameInput","setUsernameInput","passwordInput","setPasswordInput","userFilter","setUserFilter","postText","setPostText","posts","setPosts","users","setUsers","displayedUsers","setDisplayedUsers","postsOfUser","setPostsOfUser","useEffect","loggedIn","username","getUsers","document","body","style","overflowY","filter","toLowerCase","includes","onClick","method","headers","JSON","stringify","value","onChange","e","target","type","password","alert","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d77deb69.chunk.js","sourcesContent":["export function createAccount(username, password, callback) {\r\n    fetch(\"http://localhost:9000/createAccount\", { // use window.location.href in build?\r\n        method: 'POST',\r\n        credentials: \"include\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        })\r\n    })\r\n        .then(res => res.text())\r\n        .then(res => {\r\n            if (res === \"invalid\") {\r\n                alert(\"Invalid information\");\r\n            } else if (res === \"username taken\") {\r\n                alert(\"Username is already taken\");\r\n            } else if (res === \"createAccount\") {\r\n                callback(username);\r\n            }\r\n        });\r\n}\r\n\r\nexport function login(username, password, callback) {\r\n    fetch(\"http://localhost:9000/login\", {\r\n        method: 'POST',\r\n        credentials: \"include\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            username: username,\r\n            password: password\r\n        })\r\n    })\r\n        .then(res => res.text())\r\n        .then(res => {\r\n            if (res !== \"login\") {\r\n                alert(\"Login failed\");\r\n            } else {\r\n                callback(username);\r\n            }\r\n        });\r\n}\r\n\r\nexport function logout(callback) {\r\n    fetch(\"http://localhost:9000/logout\", { credentials: \"include\" })\r\n        .then(res => res.text())\r\n        .then(res => {\r\n            if (res !== \"logout\") {\r\n                alert(\"Something went wrong\");\r\n            } else {\r\n                callback(null);\r\n            }\r\n        });\r\n}\r\n\r\nexport function checkLogin(callback) {\r\n    fetch(\"http://localhost:9000/checkLogin\", { credentials: \"include\" })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if (res.loggedIn !== \"yes\") {\r\n                callback(null);\r\n            } else {\r\n                callback(res.username);\r\n            }\r\n        });\r\n}\r\n\r\nexport function post(text, callback) {\r\n    if (text.length > 300) {\r\n        alert(\"Post is too long! Limit the length to 300 characters\");\r\n        return;\r\n    }\r\n    fetch(\"http://localhost:9000/newPost\", {\r\n        method: 'POST',\r\n        credentials: \"include\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            text: text\r\n        })\r\n    })\r\n        .then(res => res.text())\r\n        .then(res => {\r\n            if (res !== \"newPost\") {\r\n                alert(\"Something went wrong\");\r\n            } else {\r\n                callback(\"\");\r\n            }\r\n        });\r\n}\r\n\r\nexport function getPosts(callback) {\r\n    fetch(\"http://localhost:9000/posts\", { credentials: \"include\" })\r\n        .then(res => res.json())\r\n        .then(res => res.map((post, idx) => \r\n                <div key={idx} className=\"post\">\r\n                    <p>{post.time}</p>\r\n                    <p>{post.user}</p>\r\n                    <p>{post.text}</p>\r\n                </div>    \r\n            )\r\n        )\r\n        .then(res => callback(res));\r\n}\r\n\r\nexport function getPostsForUser(user, callback) {\r\n    fetch(\"http://localhost:9000/posts\", {\r\n        method: 'POST',\r\n        credentials: \"include\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: user\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => res.map((post, idx) => \r\n                <div key={idx} className=\"post\">\r\n                    <p>{post.time}</p>\r\n                    <p>{post.user}</p>\r\n                    <p>{post.text}</p>\r\n                </div>    \r\n            )\r\n        )\r\n        .then(res => callback(res));\r\n}\r\n\r\nexport function getUsers(callback) {\r\n    fetch(\"http://localhost:9000/users\", { credentials: \"include\" })\r\n        .then(res => res.json())\r\n        .then(res => callback(res));\r\n}\r\n","import './App.css';\nimport { useEffect, useState } from 'react';\nimport { \n    createAccount, \n    login, \n    logout, \n    checkLogin, \n    post, \n    getPosts, \n    getPostsForUser, \n    getUsers \n} from './apiCalls';\n\nfunction App() {\n    const [enteringCredentials, setEnteringCredentials] = useState(false);\n    const [makingPost, setMakingPost] = useState(false);\n    const [loggedUser, setLoggedUser] = useState(null);\n    const [usernameInput, setUsernameInput] = useState(\"\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [userFilter, setUserFilter] = useState(\"\");\n    const [postText, setPostText] = useState(\"\");\n    const [posts, setPosts] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [displayedUsers, setDisplayedUsers] = useState([]);\n    const [postsOfUser, setPostsOfUser] = useState(null);\n\n    useEffect(() => {\n        checkLogin(setLoggedUser);\n        getPosts(setPosts);\n        getUsers(setUsers);\n    }, []);\n    useEffect(() => {\n        if (loggedUser) {\n            setUsernameInput(\"\");\n            setPasswordInput(\"\");\n            setEnteringCredentials(false);\n        }\n    }, [loggedUser]);\n    useEffect(() => {\n        if (enteringCredentials || makingPost) {\n            document.body.style.overflowY = \"hidden\";\n        } else {\n            document.body.style.overflowY = \"scroll\";\n        }\n    }, [enteringCredentials, makingPost]);\n    useEffect(() => {\n        setDisplayedUsers(users.filter(user => {\n                if (user.toLowerCase().includes(userFilter.toLowerCase())) return true;\n                return false;\n            })\n            .map((user, idx) => \n                <div \n                    key={idx} \n                    onClick={() => {\n                        if (postsOfUser === user) {\n                            setPostsOfUser(null);\n                        } else {\n                            setPostsOfUser(user);\n                        }\n                    }}\n                    className={(postsOfUser === user && \"selected user\") || \"user\"}\n                >\n                    <p>{user}</p>\n                </div>    \n            ));\n    }, [users, userFilter, postsOfUser]);\n    useEffect(() => {\n        if (!postsOfUser) {\n            getPosts(setPosts);\n        } else {\n            getPostsForUser(postsOfUser, setPosts);\n        }\n    }, [postsOfUser]);\n\n    return (\n        <div className=\"App\">\n            {enteringCredentials &&\n            <div className=\"enterCredentials\">\n                <div>\n                    <input value={usernameInput} onChange={e => setUsernameInput(e.target.value)}>\n                    </input>\n                    <input \n                        type=\"password\"\n                        value={passwordInput} \n                        onChange={e => setPasswordInput(e.target.value)}\n                    >\n                    </input>\n                </div> \n                <button onClick={() => {\n                    createAccount(usernameInput, passwordInput, setLoggedUser);\n                }}>\n                    Create Account\n                </button> \n                <button onClick={() => {\n                    login(usernameInput, passwordInput, setLoggedUser);\n                }}>\n                    Log In\n                </button>\n                <button onClick={() => setEnteringCredentials(false)}>\n                    Cancel\n                </button>\n            </div>\n            }\n            {!loggedUser && !enteringCredentials && \n            <button onClick={() => setEnteringCredentials(true)}>\n                Log in or create account\n            </button>\n            }\n            {loggedUser && !makingPost &&\n            <button onClick={() => logout(setLoggedUser)}>\n                Log out\n            </button>\n            }\n            {loggedUser &&\n            <p>Logged in as {loggedUser}</p>\n            }\n            {loggedUser && !makingPost &&\n            <button onClick={() => setMakingPost(true)}>\n                Make new post\n            </button>\n            }\n            {makingPost &&\n            <div className=\"makePost\">\n                <textarea value={postText} onChange={e => setPostText(e.target.value)}>\n                </textarea>\n                <button onClick={() => {\n                    post(postText, setPostText);\n                    setMakingPost(false);\n                }}>\n                    Post\n                </button>\n                <button onClick={() => setMakingPost(false)}>\n                    Cancel\n                </button>\n            </div>\n            }\n            <div className=\"main-container\">\n                <div className=\"user-container\">\n                    <p>Users</p>\n                    <input value={userFilter} onChange={e => setUserFilter(e.target.value)}>\n                    </input>\n                    <div className=\"centered\">\n                        {displayedUsers}\n                    </div>\n                </div>\n                <div className=\"post-container\">\n                    <div className=\"centered\">\n                        <p>\n                            {(postsOfUser && \"Posts of user \" + postsOfUser) || \"All posts\"}\n                        </p>\n                        <div className=\"centered\">\n                            {posts}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}