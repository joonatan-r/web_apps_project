{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","loggedIn","setLoggedIn","usernameInput","setUsernameInput","passwordInput","setPasswordInput","postText","setPostText","useEffect","className","value","onChange","e","target","onClick","username","password","callback","fetch","method","credentials","headers","body","JSON","stringify","then","res","text","alert","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,MAA0B,iC,MCyI1BA,MAtDf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACJC,EADI,KACMC,EADN,OAE+BF,mBAAS,IAFxC,mBAEJG,EAFI,KAEWC,EAFX,OAG+BJ,mBAAS,IAHxC,mBAGJK,EAHI,KAGWC,EAHX,OAIqBN,mBAAS,IAJ9B,mBAIJO,EAJI,KAIMC,EAJN,KAaX,OAPAC,qBAAU,WACFR,IACAG,EAAiB,IACjBE,EAAiB,OAEtB,CAACL,IAGA,sBAAKS,UAAU,MAAf,WACMT,GACF,gCACI,uBAAOU,MAAOR,EAAeS,SAAU,SAAAC,GAAC,OAAIT,EAAiBS,EAAEC,OAAOH,UAEtE,uBAAOA,MAAON,EAAeO,SAAU,SAAAC,GAAC,OAAIP,EAAiBO,EAAEC,OAAOH,cAIxEV,GACF,wBAAQc,QAAS,kBAvGNC,EAuG0Bb,EAvGhBc,EAuG+BZ,EAvGrBa,EAuGoChB,OAtG3EiB,MAAM,sCAAuC,CACzCC,OAAQ,OACRC,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBT,SAAUA,EACVC,SAAUA,MAGbS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACU,YAARA,EACAE,MAAM,uBACS,mBAARF,EACPE,MAAM,6BACS,kBAARF,GACPT,GAAS,MAnBzB,IAAuBF,EAAUC,EAAUC,GAuG/B,6BAIEjB,GACF,wBAAQc,QAAS,kBApFdC,EAoF0Bb,EApFhBc,EAoF+BZ,EApFrBa,EAoFoChB,OAnFnEiB,MAAM,8BAA+B,CACjCC,OAAQ,OACRC,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBT,SAAUA,EACVC,SAAUA,MAGbS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACU,UAARA,EACAE,MAAM,gBAENX,GAAS,MAjBzB,IAAeF,EAAUC,EAAUC,GAoFvB,oBAICjB,GACD,wBAAQc,QAAS,kBAnEbG,EAmE0BhB,OAlEtCiB,MAAM,+BAAgC,CAAEE,YAAa,YAChDK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACU,WAARA,EACAE,MAAM,wBAENX,GAAS,MAPzB,IAAgBA,GAmEJ,qBAICjB,GACD,gCACI,0BAAUU,MAAOJ,EAAUK,SAAU,SAAAC,GAAC,OAAIL,EAAYK,EAAEC,OAAOH,UAE/D,wBAAQI,QAAS,kBA/DnBa,EA+D8BrB,EA/DxBW,EA+DkCV,OA9DlDW,MAAM,gCAAiC,CACnCC,OAAQ,OACRC,YAAa,UACbC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBG,KAAMA,MAGTF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACU,YAARA,EACAE,MAAM,wBAENX,EAAS,OAhBzB,IAAcU,EAAMV,GA+DJ,qBAKJ,wBAAQR,UAAU,aAAlB,SACI,qBAAKoB,IAAKC,EAAMrB,UAAU,WAAWsB,IAAI,eCvH1CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b580a030.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\n\nfunction createAccount(username, password, callback) {\n    fetch(\"http://localhost:9000/createAccount\", { // window.location.href in build ?\n        method: 'POST',\n        credentials: \"include\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username: username,\n            password: password\n        })\n    })\n        .then(res => res.text())\n        .then(res => {\n            if (res === \"invalid\") {\n                alert(\"Invalid information\");\n            } else if (res === \"username taken\") {\n                alert(\"Username is already taken\");\n            } else if (res === \"createAccount\") {\n                callback(true);\n            }\n        });\n}\n\nfunction login(username, password, callback) {\n    fetch(\"http://localhost:9000/login\", {\n        method: 'POST',\n        credentials: \"include\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username: username,\n            password: password\n        })\n    })\n        .then(res => res.text())\n        .then(res => {\n            if (res !== \"login\") {\n                alert(\"Login failed\");\n            } else {\n                callback(true);\n            }\n        });\n}\n\nfunction logout(callback) {\n    fetch(\"http://localhost:9000/logout\", { credentials: \"include\" })\n        .then(res => res.text())\n        .then(res => {\n            if (res !== \"logout\") {\n                alert(\"Something went wrong\");\n            } else {\n                callback(false);\n            }\n        });\n}\n\nfunction post(text, callback) {\n    fetch(\"http://localhost:9000/newPost\", {\n        method: 'POST',\n        credentials: \"include\",\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            text: text\n        })\n    })\n        .then(res => res.text())\n        .then(res => {\n            if (res !== \"newPost\") {\n                alert(\"Something went wrong\");\n            } else {\n                callback(\"\");\n            }\n        });\n}\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [usernameInput, setUsernameInput] = useState(\"\");\n    const [passwordInput, setPasswordInput] = useState(\"\");\n    const [postText, setPostText] = useState(\"\");\n\n    useEffect(() => {\n        if (loggedIn) {\n            setUsernameInput(\"\");\n            setPasswordInput(\"\");\n        }\n    }, [loggedIn]);\n\n    return (\n        <div className=\"App\">\n            {!loggedIn &&\n            <div>\n                <input value={usernameInput} onChange={e => setUsernameInput(e.target.value)}>\n                </input>\n                <input value={passwordInput} onChange={e => setPasswordInput(e.target.value)}>\n                </input>\n            </div>\n            }\n            {!loggedIn && \n            <button onClick={() => createAccount(usernameInput, passwordInput, setLoggedIn)}>\n                Create Account\n            </button>\n            }\n            {!loggedIn && \n            <button onClick={() => login(usernameInput, passwordInput, setLoggedIn)}>\n                Log In\n            </button>\n            }\n            {loggedIn &&\n            <button onClick={() => logout(setLoggedIn)}>\n                Log out\n            </button>\n            }\n            {loggedIn &&\n            <div>\n                <textarea value={postText} onChange={e => setPostText(e.target.value)}>\n                </textarea>\n                <button onClick={() => post(postText, setPostText)}>\n                    Post\n                </button>\n            </div>\n            }\n            <header className=\"App-header\">\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}